const brain = require("brain.js");

const config = {
  binaryThresh: 0.5,
  hiddenLayers: [3], // array of ints for the sizes of the hidden layers in the network
  activation: "sigmoid", // supported activation types: ['sigmoid', 'relu', 'leaky-relu', 'tanh'],
  leakyReluAlpha: 0.01, // supported for activation type 'leaky-relu'
};

const net = new brain.NeuralNetwork(config);

data = [
  {input: [.760, .370, .820], output: [.650]},
  {input: [.290, .560, .420], output: [.423]},
  {input: [.470, .210, .410], output: [.363]},
  {input: [.850, .350, .150], output: [.450]},
  {input: [.970, .600, .390], output: [.653]},
  {input: [.110, .140, .390], output: [.213]},
  {input: [.610, .010, .210], output: [.277]},
  {input: [.580, .990, .890], output: [.820]},
  {input: [.510, .060, .320], output: [.297]},
  {input: [.270, .650, .240], output: [.387]},
  {input: [.300, .900, .840], output: [.680]},
  {input: [.420, .260, .510], output: [.397]},
  {input: [.830, .960, .220], output: [.670]},
  {input: [.230, .150, .240], output: [.207]},
  {input: [.580, .630, .210], output: [.473]},
  {input: [.360, .840, .670], output: [.623]},
  {input: [.920, .600, .830], output: [.783]},
  {input: [.020, .160, .750], output: [.310]},
  {input: [.500, .230, .550], output: [.427]},
  {input: [.780, .940, .240], output: [.653]},
  {input: [.030, .260, .750], output: [.347]},
  {input: [.390, .230, .740], output: [.453]},
  {input: [.990, .010, .320], output: [.440]},
  {input: [.710, .060, .080], output: [.283]},
  {input: [.970, 0.000, .660], output: [.543]},
  {input: [.890, .460, .830], output: [.727]},
  {input: [.090, .530, .620], output: [.413]},
  {input: [.740, .330, .100], output: [.390]},
  {input: [.870, 1.000, .730], output: [.867]},
  {input: [.750, .070, .670], output: [.497]},
  {input: [.960, .610, .070], output: [.547]},
  {input: [.750, .210, .200], output: [.387]},
  {input: [.670, .730, .600], output: [.667]},
  {input: [.300, .790, .490], output: [.527]},
  {input: [.590, .150, .100], output: [.280]},
  {input: [.480, .340, .160], output: [.327]},
  {input: [.950, .550, .540], output: [.680]},
  {input: [.250, .060, .050], output: [.120]},
  {input: [.110, .900, .590], output: [.533]},
  {input: [.610, .690, .560], output: [.620]},
  {input: [.810, .530, .960], output: [.767]},
  {input: [.970, .820, .530], output: [.773]},
  {input: [.520, 0.000, .150], output: [.223]},
  {input: [.410, .790, .030], output: [.410]},
  {input: [.590, .280, .010], output: [.293]},
  {input: [.690, .940, .850], output: [.827]},
  {input: [.100, .090, .340], output: [.177]},
  {input: [.830, .080, .330], output: [.413]},
  {input: [0.000, .220, .580], output: [.267]},
  {input: [.910, .360, .150], output: [.473]},
  {input: [.160, .990, 0.000], output: [.383]},
  {input: [.770, .620, .330], output: [.573]},
  {input: [.570, .930, .500], output: [.667]},
  {input: [.440, .490, .490], output: [.473]},
  {input: [.330, .760, .960], output: [.683]},
  {input: [.050, .790, .150], output: [.330]},
  {input: [.430, .540, .060], output: [.343]},
  {input: [.110, .070, .320], output: [.167]},
  {input: [.520, .360, .970], output: [.617]},
  {input: [.720, .890, 0.000], output: [.537]},
  {input: [.160, .770, .650], output: [.527]},
  {input: [.500, .940, 1.000], output: [.813]},
  {input: [.650, .280, .540], output: [.490]},
  {input: [.060, .370, .710], output: [.380]},
  {input: [.680, .650, .120], output: [.483]},
  {input: [.610, .720, .610], output: [.647]},
  {input: [.980, .810, .900], output: [.897]},
  {input: [.650, .850, .770], output: [.757]},
  {input: [.390, .930, .090], output: [.470]},
  {input: [.020, .650, .140], output: [.270]},
  {input: [.540, .450, .870], output: [.620]},
  {input: [.410, .550, .070], output: [.343]},
  {input: [.630, .430, .980], output: [.680]},
  {input: [.250, .170, .290], output: [.237]},
  {input: [.650, .030, .630], output: [.437]},
  {input: [.570, .720, .900], output: [.730]},
  {input: [.890, .110, .310], output: [.437]},
  {input: [.340, .830, .190], output: [.453]},
  {input: [1.000, .540, .020], output: [.520]},
  {input: [.270, .060, .750], output: [.360]},
  {input: [.490, .740, .310], output: [.513]},
  {input: [.070, .080, .260], output: [.137]},
  {input: [.840, .770, .690], output: [.767]},
  {input: [.260, .620, .160], output: [.347]},
  {input: [.620, .190, .850], output: [.553]},
  {input: [.970, .380, .070], output: [.473]},
  {input: [.740, .940, .020], output: [.567]},
  {input: [.820, .690, .030], output: [.513]},
  {input: [.310, .360, .740], output: [.470]},
  {input: [.930, .440, .280], output: [.550]},
  {input: [.530, .830, .360], output: [.573]},
  {input: [.250, .620, .330], output: [.400]},
  {input: [.060, .470, .660], output: [.397]},
  {input: [.310, .590, .760], output: [.553]},
  {input: [.990, .580, .900], output: [.823]},
  {input: [.250, .950, .300], output: [.500]},
  {input: [0.000, .840, .430], output: [.423]},
  {input: [.820, .790, .040], output: [.550]},
  {input: [.580, .420, .680], output: [.560]},
  {input: [.570, .970, .490], output: [.677]},
  
];

net.train(data, { log: true, errorThresh: 0.00001 });

const output = net.run([0.7, 0.8, 0.9]);

console.log(output);